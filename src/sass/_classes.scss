/**
 * @name    component
 * description
 *
 * @example   html
 * <!-- example here -->
 *
 * @author    Olivier Bossel <olivier.bossel@gmail.com>
 */

/**
 * Print out the bare and style component css
 * @param 	{List<Color>} 		[$color=default primary secondary] 		The colors to generate
 */
@mixin s-pagination-classes($colors: default primary secondary) {
  @include s-pagination-classes-bare();
  @include s-pagination-classes-style($colors);
}

/**
 * Print out the bare component css
 */
@mixin s-pagination-classes-bare() {
  @include s-component("s-pagination") {
    .#{s-component()} {
      user-select: none;
    }
    .#{s-component()}__item {
      display: inline-block;

      a {
        text-align: center;
        display: inline-block;
        padding: 1.5ex;
        min-width: 5.5ex;
        text-decoration: none;
      }
    }
    .#{s-component()}__item--first,
    .#{s-component()}__item--last {
      a {
        letter-spacing: -0.1em;
      }
    }
    .#{s-component()}__item--disabled {
      pointer-events: none;
      opacity: 0.3;
    }
  }
}

/**
 * Print out the style component css
 * @param 	{List<Color>} 		[$color=default primary secondary] 		The colors to generate
 */
@mixin s-pagination-classes-style($colors: default primary secondary) {
  @include s-component("s-pagination") {
    @each $color in $colors {
      $sel: '#{s-component()}[color="#{$color}"]';

      @if $color == default {
        $sel: "#{s-component()}";
      }

      #{$sel} {
        .#{s-component()} {
        }
        .#{s-component()}__item {
          a {
            background-color: s-color($color, -opacity 0.05);
            transform: scale(1, 1);
            transition: all 0.3s cubic-bezier(1, 0, 0, 1) 0s;
          }

          &:hover,
          &.active {
            a {
              background-color: s-color($color);
              color: white;
              transform: scale(1.1, 1.1);
              z-index: 1;
            }
          }
        }
      }
    }
  }
}
